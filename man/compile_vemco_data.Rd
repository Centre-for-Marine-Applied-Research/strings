% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile_Vemco_data.R
\name{compile_vemco_data}
\alias{compile_vemco_data}
\title{Formats temperature data from Vemco deployment}
\usage{
compile_vemco_data(
  path.vemco,
  area.name,
  depth.vemco,
  deployment.range,
  trim = TRUE,
  export.csv = FALSE
)
}
\arguments{
\item{path.vemco}{File path to the Vemco folder. This folder should have one
csv file that was extracted using Vue software. Other file types in the
folder will be ignored.}

\item{area.name}{Area where the Vemco was deployed.}

\item{depth.vemco}{Character string indicating the depth at which the Vemco
was deployed, in the format "10m".}

\item{deployment.range}{A dataframe with two columns. The first column holds
the deployment date (a Date object in the order year, month, day),  and the
second column holds the retrieval date (a Date object in the order year,
month, day).}

\item{trim}{Logical value indicating whether to trim the data to the dates
specified in \code{deployment.range}. (Note: four hours are added to the
retrieval date to account for AST, e.g., in case the sensor was retrieved
after 20:00 AST, which is 00:00 UTC the next day.) Default is \code{trim =
TRUE}.}

\item{export.csv}{Logical value indicating whether to export the compiled data
as a .csv file. If \code{export.csv = TRUE}, the compiled data will not be
returned to the global environment. Default is \code{export.csv = FALSE}.}
}
\value{
Returns a dataframe or exports a spreadsheet with the formatted Vemco
 data in two columns: the timestamp (in the format "Y-m-d H:M:S") and
 temperature value (degree celsius, rounded to three decimal places).
 Metadata at the top of each column indicates the deployment period, the
 sensor serial number, the depth of the sensor, and the timezone of the
 timestamp.

 To include the metadata, all values were converted to class
 \code{character}. To manipulate the data, the values must be converted to
 the appropriate class (e.g., \code{POSIXct} for the timestamps and
 \code{numeric} for temperature values). This can be done using the function
 \code{convert_to_tidydata()}.
}
\description{
This function formats data from a Vemco deployment so it can be
 compiled with the HOBO and aquaMeasure data.
}
\details{
Can handle .csv and .xlsx files.

 All columns are read in as class character to ensure the timestamp is parsed
 correctly. Timestamp must be saved in excel as a number or a character in
 the order "ymd IMS p", "Ymd IMS p", "Ymd HM", "Ymd HMS", "dmY HM", or "dmY
 HMS".

 If there are "Temperature" entries in the Description column, these will be
 extracted and compiled. If there are no "Temperature" entries, but there are
 "Average temperature" entries, these will be extracted and compiled.
 Otherwise, the function will stop with an error message.
}
\seealso{
Other compile: 
\code{\link{compile_HOBO_data}()},
\code{\link{compile_all_data}()},
\code{\link{compile_aquaMeasure_data}()},
\code{\link{read_deployment_log}()}
}
\author{
Danielle Dempsey
}
\concept{compile}
